{"version":3,"sources":["components/NumberViewer.js","components/ValueInput.js","components/Presets.js","components/DoubleFloatTable.js","components/NumberExpression.js","services/numerical.js","components/NumberMap.js","App.js","serviceWorker.js","index.js"],"names":["InputContainer","styled","_templateObject","RepresentationContainer","_templateObject2","NumberViewer","_this","Object","_Users_andy_projects_NumberViewer_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_andy_projects_NumberViewer_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_andy_projects_NumberViewer_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","inputString","_this2","setNumber","setState","num","numParts","eval","extractDoubleParts","e","console","log","higher","minimumIncrementParts","lower","minimumDecrementParts","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_ValueInput__WEBPACK_IMPORTED_MODULE_8__","value","_Presets__WEBPACK_IMPORTED_MODULE_9__","_DoubleFloatTable__WEBPACK_IMPORTED_MODULE_10__","className","onClick","createDoubleFromParts","toString","_NumberExpression__WEBPACK_IMPORTED_MODULE_11__","assign","number","Component","StyledContainer","ValueInput","_ref","react__WEBPACK_IMPORTED_MODULE_1___default","htmlFor","type","id","style","width","concat","Math","max","length","onChange","event","target","StyledButton","PresetButton","children","react__WEBPACK_IMPORTED_MODULE_2___default","presetValues","Presets","_ref2","map","_ref3","_ref4","_Users_andy_projects_NumberViewer_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","_ref4$","displayedValue","key","StyledTable","BitsRow","NumericRow","_templateObject3","Bit","bit","DoubleFloatTable","sign","exponent","upperMantissa","lowerMantissa","mantissa","implicitDigit","displayedMantissa","undefined","toNonScientificString","pow","colSpan","Array","from","_","i","EXPONENT_BIAS","Expression","NumberExpression","n","floatArray","Float64Array","of","intView","Int32Array","buffer","intArray","str","includes","_str$split$map","split","parts","_str$split$map2","_str$split$map2$","whole","fraction","exp","digits","String","parseInt","exp10","repeat","substring","Table","NumberMap","react_default","NavLink","props","es","getProps","isCurrent","color","pointerEvents","App","process","App_NavLink","to","basename","path","components_NumberMap","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b8df7f5e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport ValueInput from './ValueInput';\nimport Presets from './Presets';\nimport DoubleFloatTable from './DoubleFloatTable';\nimport NumberExpression from './NumberExpression';\n\nimport {\n  extractDoubleParts,\n  createDoubleFromParts,\n  minimumDecrementParts,\n  minimumIncrementParts\n} from '../services/numerical';\n\nconst InputContainer = styled('div')`\n  padding: 10px 0;\n`;\n\nconst RepresentationContainer = styled('div')`\n  margin: 10px;\n`;\n\nclass NumberViewer extends Component {\n  constructor () {\n    super();\n    this.state = {\n      inputString: '0.0'\n    };\n  }\n\n  render () {\n    const setNumber = inputString => this.setState({ inputString });\n\n    let num = 0;\n    let numParts = {};\n    try {\n      /* eslint no-eval: \"off\" */\n      /* eslint security/detect-eval-with-expression: \"off\" */\n      num = eval(this.state.inputString);\n      numParts = extractDoubleParts(num);\n    } catch (e) {\n      console.log('failed');\n    }\n\n    const higher = minimumIncrementParts(numParts);\n    const lower = minimumDecrementParts(numParts);\n\n    return (\n      <div>\n        <InputContainer>\n          <ValueInput value={this.state.inputString} setNumber={setNumber} />\n          <Presets setNumber={setNumber} />\n        </InputContainer>\n\n        <DoubleFloatTable {...numParts} />\n\n        <RepresentationContainer>\n          <button\n            className=\"adjacent\"\n            onClick={e => setNumber(createDoubleFromParts(higher).toString())}\n          >\n            &uarr; {createDoubleFromParts(higher).toString()}\n          </button>\n          <NumberExpression number={num} {...numParts} />\n          <button\n            className=\"adjacent\"\n            onClick={e => setNumber(createDoubleFromParts(lower).toString())}\n          >\n            &darr; {createDoubleFromParts(lower).toString()}\n          </button>\n        </RepresentationContainer>\n      </div>\n    );\n  }\n}\n\nexport default NumberViewer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled('div')`\n  input,\n  && {\n    font-size: 3rem;\n  }\n  input {\n    border: 1px solid #999;\n    border-radius: 6px;\n    margin-left: 20px;\n    padding: 0 10px;\n  }\n`;\n\nconst ValueInput = ({ value, setNumber }) => (\n  <StyledContainer className=\"inputArea\">\n    <label htmlFor=\"inputText\">\n      Value\n      <input\n        type=\"text\"\n        id=\"inputText\"\n        style={{\n          width: `${Math.max(3, value.length * 0.58)}em`\n        }}\n        value={value}\n        onChange={event => setNumber(event.target.value)}\n      />\n    </label>\n  </StyledContainer>\n);\nValueInput.propTypes = {\n  value: PropTypes.string,\n  setNumber: PropTypes.func.isRequired\n};\n\nexport default ValueInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled('div')`\n  margin: 20px 0 0 0;\n`;\n\nconst StyledButton = styled('button')`\n  margin: 2px;\n`;\n\nconst PresetButton = ({ value, setNumber, children }) => (\n  <StyledButton onClick={event => setNumber(value)}>\n    {children || value}\n  </StyledButton>\n);\nPresetButton.propTypes = {\n  value: PropTypes.string.isRequired,\n  setNumber: PropTypes.func.isRequired,\n  children: PropTypes.node\n};\n\nconst presetValues = [\n  // format: [ <value>, <optional displayed value>]\n  ['0'],\n  ['1'],\n  ['Math.PI', 'Pi'],\n  ['Math.E', 'e'],\n  ['Infinity'],\n  ['-Infinity'],\n  ['NaN'],\n  ['Number.MAX_SAFE_INTEGER', 'MAX_SAFE_INTEGER'],\n  ['Number.MIN_SAFE_INTEGER', 'MIN_SAFE_INTEGER'],\n  ['Number.MAX_VALUE', 'MAX_VALUE'],\n  ['Number.MIN_VALUE', 'MIN_VALUE']\n];\n\nconst Presets = ({ setNumber }) => {\n  return (\n    <StyledContainer className=\"presets\">\n      {presetValues.map(([value, displayedValue = value]) =>\n        <PresetButton key={value} value={value} setNumber={setNumber}>\n          {displayedValue}\n        </PresetButton>\n      )}\n    </StyledContainer>\n  );\n};\n\nPresets.propTypes = {\n  setNumber: PropTypes.func.isRequired\n};\n\nexport default Presets;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { toNonScientificString, EXPONENT_BIAS } from '../services/numerical';\n\nconst StyledTable = styled('table')`\n  margin: 10px 0;\n\n  border-spacing: 1px;\n\n  && .sign {\n    background-color: #fc0;\n  }\n  && .positions .sign {\n    background-color: #fec;\n  }\n  && .exponent {\n    background-color: #7e7;\n  }\n  && .positions .exponent {\n    background-color: #cfc;\n  }\n  && .mantissa {\n    background-color: #0cf;\n  }\n  && .implicit-digit,\n  && .positions .mantissa {\n    background-color: #bef;\n  }\n  && th,\n  && td {\n    text-align: center;\n    padding: 2px;\n  }\n`;\n\nconst BitsRow = styled('tr')`\n  font-family: monospace;\n  font-size: 10px;\n\n  td.bit-1 {\n    font-weight: bold;\n  }\n\n  td.sign.bit-1 {\n    background-color: #c90;\n  }\n  td.exponent.bit-1 {\n    background-color: #5a5;\n  }\n  td.mantissa.bit-1 {\n    background-color: #09c;\n  }\n`;\n\nconst NumericRow = styled('tr')`\n  font-size: 2rem;\n  .biased {\n    color: rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst Bit = ({ className, bit }) => (\n  <td className={`${className} bit-${bit}`}>{bit}</td>\n);\nBit.propTypes = {\n  className: PropTypes.string,\n  bit: PropTypes.number\n};\n\nexport default function DoubleFloatTable ({\n  sign,\n  exponent,\n  upperMantissa,\n  lowerMantissa,\n  mantissa\n}) {\n  let implicitDigit = '1.';\n  if (exponent === 0) {\n    implicitDigit = '0.';\n  } else if (exponent === 0x7ff) {\n    implicitDigit = ' - ';\n  }\n\n  let displayedMantissa = (mantissa !== undefined && toNonScientificString(mantissa)) || '~';\n  if (exponent === 0x7ff) {\n    if (upperMantissa === 0 && lowerMantissa === 0) {\n      displayedMantissa = '0';\n    } else {\n      displayedMantissa = '0x' + ((upperMantissa * 2 ** 32) + lowerMantissa).toString(16);\n    }\n  }\n\n  return (\n    <StyledTable>\n      <thead>\n        <tr>\n          <th className=\"sign\">Sign</th>\n          <th className=\"exponent\" colSpan={11}>\n            Exponent\n          </th>\n          <th className=\"mantissa\" colSpan={53}>\n            Mantissa\n          </th>\n        </tr>\n        <BitsRow className=\"positions\">\n          <th className=\"sign\">63</th>\n          {Array.from({ length: 11 }, (_, i) => i).map(i => (\n            <th className=\"exponent\" key={i}>\n              {62 - i}\n            </th>\n          ))}\n          <th className=\"mantissa\" />\n          {Array.from({ length: 52 }, (_, i) => i).map(i => (\n            <th className=\"mantissa\" key={i}>\n              {51 - i < 10 ? '0' : ''}\n              {51 - i}\n            </th>\n          ))}\n        </BitsRow>\n      </thead>\n      <tbody>\n        <BitsRow>\n          <Bit className=\"sign\" bit={sign} />\n          {Array.from({ length: 11 }, (_, i) => i).map(i => (\n            <Bit\n              className=\"exponent\"\n              bit={(exponent >> (10 - i)) & 0x1}\n              key={`exponent-${i}`}\n            />\n          ))}\n          <td className=\"implicit-digit\">{implicitDigit}</td>\n          {Array.from({ length: 20 }, (_, i) => i).map(i => (\n            <Bit\n              className=\"mantissa\"\n              bit={(upperMantissa >> (19 - i)) & 0x1}\n              key={`upperMantissa-${i}`}\n            />\n          ))}\n          {Array.from({ length: 32 }, (_, i) => i).map(i => (\n            <Bit\n              className=\"mantissa\"\n              bit={(lowerMantissa >> (31 - i)) & 0x1}\n              key={`lowerMantissa-${i}`}\n            />\n          ))}\n        </BitsRow>\n        <NumericRow>\n          <td className=\"sign\">\n            {(sign !== undefined && (sign > 0 ? '-' : '+')) || '~'}\n          </td>\n          <td className=\"exponent\" colSpan=\"11\">\n            {(exponent !== undefined && (\n              <span className=\"biased\">({exponent})</span>\n            )) ||\n              '~'}\n            {exponent !== undefined && exponent - EXPONENT_BIAS}\n          </td>\n          <td className=\"mantissa\" colSpan=\"53\">{displayedMantissa}</td>\n        </NumericRow>\n      </tbody>\n    </StyledTable>\n  );\n}\n\nDoubleFloatTable.propTypes = {\n  sign: PropTypes.number, // integer\n  exponent: PropTypes.number, // integer\n  upperMantissa: PropTypes.number, // integer\n  lowerMantissa: PropTypes.number, // integer\n  mantissa: PropTypes.number // float\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { toNonScientificString, EXPONENT_BIAS } from '../services/numerical';\n\nconst Expression = styled('div')`\n  font-size: 3em;\n  margin: 5px;\n\n  .sign {\n    background-color: #fec;\n  }\n  .mantissa {\n    background-color: #bef;\n  }\n  sup {\n    font-size: 50%;\n    background-color: #cfc;\n  }\n`;\n\nconst NumberExpression = ({\n  number,\n  sign,\n  exponent,\n  upperMantissa,\n  lowerMantissa,\n  mantissa\n}) =>\n  exponent !== 0x7ff ? (\n    <Expression>\n      {number} = <span className=\"sign\">{sign > 0 ? '-' : '+'}</span>\n      <span className=\"mantissa\">{toNonScientificString(mantissa)}</span>\n      &times;2\n      <sup>{exponent - EXPONENT_BIAS}</sup>\n    </Expression>\n  ) : (\n    <Expression>\n      {upperMantissa === 0 && lowerMantissa === 0 ? (\n        <span>\n          <span className=\"sign\">{`${sign ? '-' : '+'}`}</span>\n          Infinity\n        </span>\n      ) : (\n        <span>\n          <span className=\"sign\">{`${sign ? '-' : '+'}`}</span>\n          NaN\n        </span>\n      )}\n    </Expression>\n  );\n\nNumberExpression.propTypes = {\n  number: PropTypes.number,\n  sign: PropTypes.number, // integer\n  exponent: PropTypes.number, // integer\n  upperMantissa: PropTypes.number, // integer\n  lowerMantissa: PropTypes.number, // integer\n  mantissa: PropTypes.number // float\n};\n\nexport default NumberExpression;\n","export const EXPONENT_BIAS = 1023;\n\nexport const extractDoubleParts = n => {\n  let floatArray = Float64Array.of(n);\n  const intView = new Int32Array(floatArray.buffer);\n\n  const sign = (intView[1] >> 31) & 0x1;\n  const exponent = (intView[1] >> 20) & 0x7ff;\n  const upperMantissa = intView[1] & 0x000fffff;\n  const lowerMantissa =\n    intView[0] < 0 ? 0x100000000 + intView[0] : intView[0] | 0;\n\n  const mantissa =\n    exponent !== 0\n      ? createDoubleFromParts({\n        sign: 0,\n        exponent: EXPONENT_BIAS,\n        upperMantissa,\n        lowerMantissa\n      })\n      : upperMantissa * Math.pow(2, -20) + lowerMantissa * Math.pow(2, -52); // denorm\n\n  return {\n    sign,\n    exponent,\n    upperMantissa,\n    lowerMantissa,\n    mantissa\n  };\n};\n\nexport const createDoubleFromParts = ({\n  sign,\n  exponent,\n  upperMantissa,\n  lowerMantissa\n}) => {\n  let intArray = new Int32Array(2);\n  intArray[0] = lowerMantissa;\n  intArray[1] = (sign << 31) | (exponent << 20) | upperMantissa;\n\n  let floatView = new Float64Array(intArray.buffer);\n  return floatView[0];\n};\n\nexport const minimumIncrementParts = ({\n  sign,\n  exponent,\n  upperMantissa,\n  lowerMantissa\n}) => {\n  if (lowerMantissa === 0xffffffff) {\n    if (upperMantissa === 0xfffff) {\n      upperMantissa = 0;\n      lowerMantissa = 0;\n      exponent += 1;\n    } else {\n      upperMantissa += 1;\n      lowerMantissa = 0;\n    }\n  } else {\n    lowerMantissa += 1;\n  }\n\n  return {\n    sign,\n    exponent,\n    upperMantissa,\n    lowerMantissa\n  };\n};\n\nexport const minimumDecrementParts = ({\n  sign,\n  exponent,\n  upperMantissa,\n  lowerMantissa\n}) => {\n  if (lowerMantissa === 0) {\n    if (upperMantissa === 0) {\n      upperMantissa = 0xfffff;\n      lowerMantissa = 0xffffffff;\n      exponent -= 1;\n    } else {\n      upperMantissa -= 1;\n      lowerMantissa = 0xffffffff;\n    }\n  } else {\n    lowerMantissa -= 1;\n  }\n\n  return {\n    sign,\n    exponent,\n    upperMantissa,\n    lowerMantissa\n  };\n};\n\nexport const toNonScientificString = n => {\n  try {\n    let str = n.toString();\n    if (str.includes('e')) {\n      const [[whole, fraction], [exp]] = str\n        .split('e')\n        .map(parts => parts.split('.'));\n\n      let digits = String(parseInt(whole));\n      if (fraction !== undefined) digits += fraction;\n\n      const exp10 = parseInt(exp);\n      if (exp10 < 0) {\n        str =\n          '0.' +\n          '0'.repeat(-exp10 - 1) +\n          digits.substring(0, Math.max(1, 17 + exp10));\n      } else if (exp10 > 0) {\n        str = digits + '0'.repeat(exp10 - 1);\n      }\n    }\n    return str;\n  } catch (e) {\n    return 0;\n  }\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Table = styled('table')`\n  margin: 20px auto;\n  border-collapse: collapse;\n  border-radius: 4px;\n\n  tr th {\n    text-align: left;\n  }\n  tr th,\n  tr td {\n    font-size: 1.2rem;\n    padding: 8px 12px;\n  }\n\n  tr {\n    background-color: #ddd;\n  }\n  tr .sign {\n    background-color: #fec;\n    text-align: center;\n  }\n  tr .exponent {\n    background-color: #cfc;\n  }\n  tr .mantissa {\n    background-color: #bef;\n  }\n\n  tr th {\n    background-color: #ccc;\n  }\n  tr th.sign {\n    background-color: #fc0;\n  }\n  tr th.exponent {\n    background-color: #7e7;\n  }\n  tr th.mantissa {\n    background-color: #0cf;\n  }\n\n  tbody tr .sign,\n  tbody tr .exponent,\n  tbody tr .mantissa {\n    font-family: monospace;\n  }\n`;\n\nconst NumberMap = () => (\n  <Table>\n    <thead>\n      <tr>\n        <th className=\"sign\">Sign</th>\n        <th className=\"exponent\">Exponent</th>\n        <th className=\"mantissa\">Mantissa</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td className=\"sign\">0</td>\n        <td className=\"exponent\">11111111111</td>\n        <td className=\"mantissa\">00000..00001&ndash;11111..11111</td>\n        <td>NaN (quiet and signalling)</td>\n      </tr>\n      <tr>\n        <td className=\"sign\">0</td>\n        <td className=\"exponent\">11111111111</td>\n        <td className=\"mantissa\">00000..00000</td>\n        <td>Positive Infinity</td>\n      </tr>\n      <tr>\n        <td className=\"sign\">0</td>\n        <td className=\"exponent\">00000000001&ndash;11111111110</td>\n        <td className=\"mantissa\">00000..00000&ndash;11111..11111</td>\n        <td>\n          Normalised numbers (1.0*2\n          <sup>-1022</sup> to 1.999999*2\n          <sup>1023</sup>)\n        </td>\n      </tr>\n      <tr>\n        <td className=\"sign\">0</td>\n        <td className=\"exponent\">00000000000</td>\n        <td className=\"mantissa\">00000..00000&ndash;11111..11111</td>\n        <td>\n          Denormalised numbers (1.0*2\n          <sup>-(1023+51)</sup> to 0.999999*2\n          <sup>-1023</sup>)\n        </td>\n      </tr>\n      <tr>\n        <td className=\"sign\">0</td>\n        <td className=\"exponent\">00000000000</td>\n        <td className=\"mantissa\">00000..00000</td>\n        <td>Positive Zero</td>\n      </tr>\n      <tr>\n        <td className=\"sign\">1</td>\n        <td className=\"exponent\">00000000000</td>\n        <td className=\"mantissa\">00000..00000</td>\n        <td>Negative Zero</td>\n      </tr>\n      <tr>\n        <td className=\"sign\">1</td>\n        <td className=\"exponent\">00000000000</td>\n        <td className=\"mantissa\">00000..00000&ndash;11111..11111</td>\n        <td>\n          Negative denormalised numbers (-1.0*2\n          <sup>-(1023+51)</sup> to -0.999999*2\n          <sup>-1023</sup>)\n        </td>\n      </tr>\n      <tr>\n        <td className=\"sign\">1</td>\n        <td className=\"exponent\">00000000001&ndash;11111111110</td>\n        <td className=\"mantissa\">00000..00000&ndash;11111..11111</td>\n        <td>\n          Negative normalised numbers (-1.0*2\n          <sup>-1022</sup> to -1.999999*2\n          <sup>1023</sup>)\n        </td>\n      </tr>\n      <tr>\n        <td className=\"sign\">1</td>\n        <td className=\"exponent\">11111111111</td>\n        <td className=\"mantissa\">00000..00000</td>\n        <td>Negative Infinity</td>\n      </tr>\n      <tr>\n        <td className=\"sign\">1</td>\n        <td className=\"exponent\">11111111111</td>\n        <td className=\"mantissa\">00000..00001&ndash;11111..11111</td>\n        <td>Negative NaN (quiet and signalling)</td>\n      </tr>\n    </tbody>\n  </Table>\n);\n\nexport default NumberMap;\n","import React, { Component } from 'react';\nimport { Router, Link } from '@reach/router';\n\nimport NumberViewer from './components/NumberViewer';\nimport NumberMap from './components/NumberMap';\n\nimport './App.css';\n\nconst NavLink = props =>\n  <Link\n    getProps={({ isCurrent }) => isCurrent\n      ? { style: { color: '#999', pointerEvents: 'none' } }\n      : null}\n    {...props}\n  />;\n\nclass App extends Component {\n  render () {\n    console.log('PUBLIC_URL', process.env.PUBLIC_URL);\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <ul className=\"nav\">\n            <li>\n              <NavLink to=\"/\">Viewer</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/map\">Value Map</NavLink>\n            </li>\n          </ul>\n          <h1>Number Viewer</h1>\n        </header>\n        {process.env.PUBLIC_URL}\n        <Router basename={process.env.PUBLIC_URL}>\n          <NumberViewer path=\"/\"/>\n          <NumberMap path=\"/map\"/>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}